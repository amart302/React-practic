import React, { useState } from "react";
import './main.css';

function Main() {

    /* componentDidMount() ‚Äî —ç—Ç–æ –º–µ—Ç–æ–¥ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ React, 
     –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±—É–¥–µ—Ç —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω (–≤—Å—Ç–∞–≤–ª–µ–Ω) –≤ –¥–µ—Ä–µ–≤–æ DOM. */

    /*
        componentDidUpdate() ‚Äî —ç—Ç–æ –º–µ—Ç–æ–¥ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –≤ React, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Å—Ä–∞–∑—É
        –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏–∑-–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–ª–∏ props.
    */

    /*
        –ú–µ—Ç–æ–¥ componentWillUnmount —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –º–µ—Ç–æ–¥–æ–≤ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –≤ –∫–ª–∞—Å—Å–æ–≤—ã—Ö 
        –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö React. –û–Ω –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω –∏–∑ DOM. –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ—á–∏—Å—Ç–∫–∏, —Ç–∞–∫–æ–π –∫–∞–∫ –æ—Ç–º–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–æ–∫, —Ç–∞–π–º–µ—Ä–æ–≤ –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏.
    */
    //componentWillUnmount + componentDidMount
    
    // React.useEffect(() => {
    //     console.log('–ö–æ–Ω—Ç–µ–Ω—Ç –æ—Ç–æ–±—Ä–∞–∑–∏–ª—Å—è');
    // }, []);

    // React.useEffect(() => {
    //     console.log('–ö–æ–Ω—Ç–µ–Ω—Ç –æ–±–Ω–æ–≤–∏–ª—Å—è');
    // }, [posts]);

    // React.useEffect(() => {
    //     console.log('–ö–æ–Ω—Ç–µ–Ω—Ç');
    //     return () => {
    //         console.log('–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —É–¥–∞–ª–µ–Ω');
    //     };
    // }, []);

    const postsData = [
        {
            id: 1,
            userName: 'Amart',
            avatar: 'img/bmw.jpg',
            imgPost: 'img/bmwM8Competition.jpg',
            like: false,
            likes: 93534,
            description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Repudiandae, amet!',
            comments: [
                {
                    avatar: 'img/amg.jpg',
                    userName: 'Muhammad',
                    comment: '–ú–∞—à–∏–Ω–∞ –∫–∞–π—Ñ'
                },
                {
                    avatar: 'img/audi.jpg',
                    userName: 'Arsamak',
                    comment: '–ú–æ—è –ª—É—á—à–µ'
                }
            ]
        },
        {
            id: 2,
            userName: 'Muhammad',
            avatar: 'img/amg.jpg',
            imgPost: 'img/amgPost.jpg',
            like: false,
            likes: 56243,
            description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Repudiandae, amet!',
            comments: [
                {
                    avatar: 'img/bugatti.jpg',
                    userName: 'Musa',
                    comment: '–ú—É—Ö–∞–º–º–∞–¥ —Ç–≤–æ—è ??'
                }
            ]
        },
        {
            id: 3,
            userName: 'Arsamak',
            avatar: 'img/audi.jpg',
            imgPost: 'img/audiPost.jpg',
            like: false,
            likes: 48279,
            description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Repudiandae, amet!',
            comments: [
                {
                    userName: 'Adam',
                    avatar: 'img/granta.jpg',
                    comment: '–ê—Ä—Å–∞–º–∞–∫ 14—é –ø—Ä–æ–¥–∞–ª ??'
                },
                {
                    avatar: 'img/audi.jpg',
                    userName: 'Arsamak',
                    comment: '–ö–æ–Ω–µ—á–Ω–æ, –Ω–∞–¥–æ —Ä–∞—Å—Ç–∏'
                }
            ]
        },
        {
            id: 4,
            userName: 'Musa',
            avatar: 'img/bugatti.jpg',
            imgPost: 'img/bugattiPost.jpg',
            like: false,
            likes: 87645,
            description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Repudiandae, amet!',
            comments: []  
        },
    ];

    const [posts, setPosts] = useState(postsData);

    const handleLike = (id) => {
        setPosts(posts.map(post => {
                if(post.id == id){
                    return { ...post, like: !post.like, likes: post.likes + (post.like ? -1 : 1)}
                }
                return post;
            })
        );
        
    };

    const [commentStyles, setCommentStyles] = useState({
        position: 'fixed',
        bottom: '-110vh'
    })

    const [selectedComments, setSelectedComments] = useState([]);
    const [selectId, setId] = useState(0);
    
    function getPostComments(id){
        setCommentStyles({ position: 'fixed', bottom: '0', transition: 'all 0.6s'});
        let commentsArray = [];
        posts.map(post => {
            if(post.id == id){
                commentsArray = post.comments;
                setSelectedComments(commentsArray);
                setId(id);
            }
        })
        
    }

    const [inputValue, setInputValue] = useState('');

    const handleInputChange = (event) => {
            setInputValue(event.target.value);
    };

    const saveSubmit = () => {
        
            setPosts(posts.map(post => {
                if(post.id == selectId){
                    const newComment = {
                        userName: 'Amart',
                        avatar: 'img/bmw.jpg',
                        comment: inputValue
                    }
                    const updatedComments = [...post.comments, newComment];
                    setSelectedComments(updatedComments);
                    setInputValue('');
                    return { ...post, comments: updatedComments };
                }
                return post;
            })
        );
    };
    return (
        <main>
            <div className="main">
                {posts.map(post => (
                    <div className="post">
                        <div className="account-parent">
                            <div className="account-info">
                                <div className="avatar-block">
                                    <img className="accountAvatar" src={post.avatar} alt="" />
                                </div>
                            <span className="accountName">{post.userName}</span>
                            </div>
                            <div className="other">
                                <div className="point"></div>
                                <div className="point"></div>
                                <div className="point"></div>
                            </div>
                        </div>
                        <div className="post-block">
                            <img className="postImg" src={post.imgPost} alt="" />
                        </div>
                        <div className="postOptions-block">
                            <div className="podBlOpions1">
                                <img className="likeBtn" onClick={() => handleLike(post.id)} src={post.like ? 'img/redHeartIcon.svg' : 'img/heartIcon.svg'} alt="" />
                                <img className="commentBtn" onClick={() => getPostComments(post.id)} src='img/commentIcon.svg' alt="" />
                                <img className="shareBtn" src='img/shareIcon.svg' alt="" />
                            </div>
                            <div className="podBlOpions2">
                                <img className="bookmarkBtn" src='img/bookmarkIcon.svg' alt="" />
                            </div>
                        </div>
                        <div className="description">
                            <p className="likeNum">–ù—Ä–∞–≤–∏—Ç—Å—è: <span className="likesNum">{post.likes}</span></p>
                            <p className="postDescription">{post.userName}: <span className="descriptionText">{post.description}</span></p>
                        </div>
                        <div className="commentsNum">View all comments({post.comments.length})</div>
                    </div>
                ))}

            </div>
            <div className="comment-block-parent" style={commentStyles}>
                <div className="comment-block">
                    <hr onClick={() => setCommentStyles({ position: 'fixed', bottom: '-110vh', transition: 'all 0.6s'})}/>
                    <h3>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏</h3>
                    <div className="comments-block-podBlock">

                    {(selectedComments.length > 0) ? (selectedComments.map(comment => (
                        <div className="comment">
                            <img className="accountAvatar" src={comment.avatar} alt="" />
                            <div>
                                <p className="accountName">{comment.userName}</p>
                                <p>{comment.comment}</p>
                            </div>
                        </div>
                    ))
                        
                    ) : (<p className="noComments">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ–∫–∞ –Ω–µ—Ç—É</p>)}

                        <div className="addComment-block">
                            <img className="accountAvatar" src="img/bmw.jpg" alt="" />
                            <input type="text" placeholder="–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π" value={inputValue} onChange={handleInputChange}/>
                            <button onClick={saveSubmit}>ü°°</button>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    );
}

export default Main;